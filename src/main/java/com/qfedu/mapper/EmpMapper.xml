<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--1)mapper接口的全限定名要和mapper映射文件的namespace值一致。
2)mapper方法名称接口的要和mapper映射文件的statement的id一致。
3)mapper接口的方法参数类型要和mapper映射文件的statement的parameterType的值一致，而且它的参数是一个。
4)mapper接口的方法返回值类型要和mapper映射文件的statement的resultType的值一致-->
<mapper namespace="com.qfedu.mapper.EmployeeDao">
    <select id="findAll" resultType="com.qfedu.mapper.Employee">
        select * from employee
    </select>

<!--    获取自增的id-->
<!--    本方案只是针对于mysql生效，如果使用oracle是不生效的
    useGeneratedKeys  true 表示要获取自增的值
    keyProperty  将自增的值赋值给对象的哪个属性
-->
    <insert id="add" parameterType="com.qfedu.mapper.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee(name, age, sex, phone) values(#{name}, #{age}, #{sex}, #{phone})
    </insert>
<!--    mysql和oracle都可以的版本-->
    <insert id="add2" parameterType="com.qfedu.mapper.Employee">
        insert into employee(name, age, sex, phone) values(#{name}, #{age}, #{sex}, #{phone})
--        <!--order 执行selectKey标签语句的先后顺序-->
        <selectKey order="AFTER" keyProperty="id" resultType="int">
            select last_insert_id()
        </selectKey>
    </insert>

    <insert id="add3" parameterType="com.qfedu.mapper.Employee">
<!--insert into employee(name, age, sex, phone)-->
<!--if给判断， test给出来判断条件-->
<!--suffixOverrides 去除指定的后缀-->
        insert into employee(
        <trim suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phone != null">
                phone
            </if>
        </trim>
        ) values (
        <trim suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="phone != null">
                #{phone}
            </if>
        </trim>
        )
    </insert>
<!--    where-->
    <select id="findByCondition" parameterType="com.qfedu.mapper.Employee" resultType="com.qfedu.mapper.Employee">
        select * from employee
        <where>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </where>
    </select>
<!--    更新-->
    <update id="update" parameterType="com.qfedu.mapper.Employee">
        update employee
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="age != null">
                age=#{age},
            </if>
            <if test="sex != null">
                sex=#{sex},
            </if>
            <if test="phone != null">
                phone=#{phone}
            </if>
        </set>
         where id = #{id}

    </update>
    <delete id="deleteByIds" parameterType="list">
<!--  collection  遍历的元素
 item 遍历的临时的变量名字

现在咱们的参数是一个List
-->
        delete from employee where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>

    </delete>
<!--    如果参数是一个数组    配置的参数是一个map， collection的值是一个array,array是map中的key-->
    <delete id="deleteByIds1" parameterType="map">
        delete from employee where id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>